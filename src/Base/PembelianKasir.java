/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Base;
import javax.swing.JOptionPane;
import java.sql.SQLException;
import java.awt.Color;
import java.awt.Component;
import java.awt.event.KeyEvent;
import java.sql.*;
import java.sql.DriverManager;
import java.time.LocalDate;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListCellRenderer;
import javax.swing.JComponent;
import javax.swing.JList;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author ASUS
 */
public final class PembelianKasir extends javax.swing.JFrame {
private static String Id;
    /**
     * Creates new form PembelianKasir
     */
    public PembelianKasir() {
        initComponents();   
        addInputListener();
        setLocationRelativeTo(null);
        this.Id = SignIn.LoggedInUser;
        // ini keyListener agar hanya bisa input angka saja pada txt_jumlah
        txt_jumlah.addKeyListener(new java.awt.event.KeyAdapter() {
            @Override
            public void keyTyped(java.awt.event.KeyEvent evt) {
                char c = evt.getKeyChar();
                // Allow only digits and control characters (like backspace)
                if (!Character.isDigit(c) && c != KeyEvent.VK_BACK_SPACE) {
                    evt.consume(); // Ignore the event
                }
            }
        });
    try {
        LoadData();
        loadSupplier();
        loadProduct();
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(null, "Data tidak bisa tampil! Error: " + e.getMessage());
    }
    // Buat combobox supplier transparan 
    cmbx_supplier.setOpaque(false);
    cmbx_supplier.setBackground(new Color(0, 0, 0, 0));
    cmbx_supplier.setForeground(Color.WHITE);
    cmbx_supplier.setBorder(null);
    //buat dropdown transparan combo box supplier
    cmbx_supplier.setRenderer(new DefaultListCellRenderer() {
        @Override
        public Component getListCellRendererComponent(JList<?> list, Object value,
                                                      int index, boolean isSelected, boolean cellHasFocus) {
            Component c = super.getListCellRendererComponent(list, value, index, isSelected, cellHasFocus);
            if (c instanceof JComponent) {
                ((JComponent) c).setOpaque(false);
            }
            return c;
        }
    });
    
    // Buat combobox produk transparan
    //code agar tidak mewarnai component, jadi component mengikuti warna seperti sebelumnya
    cmbx_produk.setOpaque(false);
    //atur bg menjadi transparan
    cmbx_produk.setBackground(new Color(0, 0, 0, 0));
    //atur warna text menjadi putih
    cmbx_produk.setForeground(Color.WHITE);
    //tidak menampilkan border
    cmbx_produk.setBorder(null);
    //buat dropdown transparan combo box produk
    cmbx_produk.setRenderer(new DefaultListCellRenderer() {
        @Override
        public Component getListCellRendererComponent(JList<?> list, Object value,
                                                      int index, boolean isSelected, boolean cellHasFocus) {
            Component c = super.getListCellRendererComponent(list, value, index, isSelected, cellHasFocus);
            if (c instanceof JComponent) {
                ((JComponent) c).setOpaque(false);
            }
            return c;
        }
    });

    
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        btnBack = new javax.swing.JButton();
        btnMember = new javax.swing.JButton();
        btnTransaksi = new javax.swing.JButton();
        btnPembelian = new javax.swing.JButton();
        btnProduct = new javax.swing.JButton();
        btnTreatment = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tb_pembelian = new javax.swing.JTable();
        btnSimpan = new javax.swing.JButton();
        btnEdit = new javax.swing.JButton();
        cmbx_produk = new javax.swing.JComboBox<>();
        cmbx_supplier = new javax.swing.JComboBox<>();
        txt_total = new javax.swing.JTextField();
        txt_jumlah = new javax.swing.JTextField();
        txt_harga = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setPreferredSize(new java.awt.Dimension(936, 666));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnBack.setContentAreaFilled(false);
        btnBack.setBorderPainted(false);
        btnBack.setIcon(new javax.swing.ImageIcon(getClass().getResource("/button/back100.png"))); // NOI18N
        btnBack.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/button/btnMembership50.png"))); // NOI18N
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        jPanel1.add(btnBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(5, 580, 73, 70));

        btnMember.setContentAreaFilled(false);
        btnMember.setBorderPainted(false);
        btnMember.setIcon(new javax.swing.ImageIcon(getClass().getResource("/button/btnMembership100.png"))); // NOI18N
        btnMember.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/button/btnMembership50.png"))); // NOI18N
        btnMember.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMemberActionPerformed(evt);
            }
        });
        jPanel1.add(btnMember, new org.netbeans.lib.awtextra.AbsoluteConstraints(5, 290, 73, 70));

        btnTransaksi.setContentAreaFilled(false);
        btnTransaksi.setBorderPainted(false);
        btnTransaksi.setIcon(new javax.swing.ImageIcon(getClass().getResource("/button/btnTransaksi100.png"))); // NOI18N
        btnTransaksi.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/button/btnTransaksi50.png"))); // NOI18N
        btnTransaksi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTransaksiActionPerformed(evt);
            }
        });
        jPanel1.add(btnTransaksi, new org.netbeans.lib.awtextra.AbsoluteConstraints(5, 220, 73, 70));

        btnPembelian.setContentAreaFilled(false);
        btnPembelian.setBorderPainted(false);
        btnPembelian.setIcon(new javax.swing.ImageIcon(getClass().getResource("/button/btnPembelian100.png"))); // NOI18N
        btnPembelian.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/button/btnPembelian50.png"))); // NOI18N
        btnPembelian.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPembelianActionPerformed(evt);
            }
        });
        jPanel1.add(btnPembelian, new org.netbeans.lib.awtextra.AbsoluteConstraints(5, 150, 73, 70));

        btnProduct.setContentAreaFilled(false);
        btnProduct.setBorderPainted(false);
        btnProduct.setIcon(new javax.swing.ImageIcon(getClass().getResource("/button/btnProduk100.png"))); // NOI18N
        btnProduct.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/button/btnProduk50.png"))); // NOI18N
        btnProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProductActionPerformed(evt);
            }
        });
        jPanel1.add(btnProduct, new org.netbeans.lib.awtextra.AbsoluteConstraints(5, 80, 73, 70));

        btnTreatment.setContentAreaFilled(false);
        btnTreatment.setBorderPainted(false);
        btnTreatment.setIcon(new javax.swing.ImageIcon(getClass().getResource("/button/btnTreatment100.png"))); // NOI18N
        btnTreatment.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/button/btnTreatment50.png"))); // NOI18N
        btnTreatment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTreatmentActionPerformed(evt);
            }
        });
        jPanel1.add(btnTreatment, new org.netbeans.lib.awtextra.AbsoluteConstraints(5, 10, 73, 70));

        tb_pembelian.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Supplier", "Produk", "Jumlah", "Total", "Tanggal"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tb_pembelian);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 170, -1, 310));

        btnSimpan.setContentAreaFilled(false);
        btnSimpan.setBorderPainted(false);
        btnSimpan.setIcon(new javax.swing.ImageIcon(getClass().getResource("/button/simpan100.png"))); // NOI18N
        btnSimpan.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/button/simpan50.png"))); // NOI18N
        btnSimpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSimpanActionPerformed(evt);
            }
        });
        jPanel1.add(btnSimpan, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 590, 320, 60));

        btnEdit.setContentAreaFilled(false);
        btnEdit.setBorderPainted(false);
        btnEdit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/button/edit100.png"))); // NOI18N
        btnEdit.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/button/edit50.png"))); // NOI18N
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });
        jPanel1.add(btnEdit, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 550, -1, -1));

        cmbx_produk.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Pilih nama produk" }));
        cmbx_produk.setBorder(null);
        cmbx_produk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbx_produkActionPerformed(evt);
            }
        });
        jPanel1.add(cmbx_produk, new org.netbeans.lib.awtextra.AbsoluteConstraints(622, 263, 270, 26));

        cmbx_supplier.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Pilih nama supplier" }));
        cmbx_supplier.setBorder(null);
        cmbx_supplier.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbx_supplierActionPerformed(evt);
            }
        });
        jPanel1.add(cmbx_supplier, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 201, 270, 26));

        txt_total.setBorder(null);
        txt_total.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_totalActionPerformed(evt);
            }
        });
        jPanel1.add(txt_total, new org.netbeans.lib.awtextra.AbsoluteConstraints(622, 440, 270, 26));

        txt_jumlah.setBorder(null);
        txt_jumlah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_jumlahActionPerformed(evt);
            }
        });
        jPanel1.add(txt_jumlah, new org.netbeans.lib.awtextra.AbsoluteConstraints(622, 380, 270, 26));

        txt_harga.setText("Rp");
        txt_harga.setBorder(null);
        txt_harga.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_hargaActionPerformed(evt);
            }
        });
        jPanel1.add(txt_harga, new org.netbeans.lib.awtextra.AbsoluteConstraints(622, 319, 270, 26));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/designKasir/Pembelian (2).png"))); // NOI18N
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnTreatmentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTreatmentActionPerformed
        TreatmentKasir abal = new TreatmentKasir();
        abal.setVisible(true);
        abal.pack();
        abal.setLocationRelativeTo(null);
        this.dispose();
    }//GEN-LAST:event_btnTreatmentActionPerformed

    private void btnProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProductActionPerformed
        ProductKasir abal = new ProductKasir();
        abal.setVisible(true);
        abal.pack();
        abal.setLocationRelativeTo(null);
        this.dispose();
    }//GEN-LAST:event_btnProductActionPerformed

    private void btnPembelianActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPembelianActionPerformed
        PembelianKasir abal = new PembelianKasir();
        abal.setVisible(true);
        abal.pack();
        abal.setLocationRelativeTo(null);
        this.dispose();
    }//GEN-LAST:event_btnPembelianActionPerformed

    private void btnTransaksiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTransaksiActionPerformed
        TransaksiKasir abal = new TransaksiKasir();
        abal.setVisible(true);
        abal.pack();
        abal.setLocationRelativeTo(null);
        this.dispose();
    }//GEN-LAST:event_btnTransaksiActionPerformed

    private void btnMemberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMemberActionPerformed
        MemberKasir abal = new MemberKasir();
        abal.setVisible(true);
        abal.pack();
        abal.setLocationRelativeTo(null);
        this.dispose();
    }//GEN-LAST:event_btnMemberActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        new DashboardKasir().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnSimpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSimpanActionPerformed
        try {
            //validasi agar inputan di isi oleh user
            if (cmbx_produk.getSelectedIndex() == 0 || cmbx_supplier.getSelectedIndex() == 0) {
                JOptionPane.showMessageDialog(this, "Harap Pilih Salah Satu!", "ERROR", JOptionPane.WARNING_MESSAGE);
                return;
            }
            if (txt_harga.getText().isEmpty() || txt_jumlah.getText().isEmpty() || txt_total.getText().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Harap Jangan Dikosongi!", "ERROR", JOptionPane.WARNING_MESSAGE);
                return;
            }
            
            //proses inisialisasi 
            int idSupplier = getIdFromComboBoxSupp(cmbx_supplier);
            String idProduk = getIdFromComboBox(cmbx_produk);
            String harga = txt_harga.getText();
            String jumlah = txt_jumlah.getText();
            String total = txt_total.getText();
            String IdUser = PembelianKasir.Id;
            LocalDate tgl_beli = LocalDate.now();
            
            //memanggil method lain
            SimpanTransaksi(idSupplier, idProduk, harga, jumlah, total, IdUser, tgl_beli);
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "YAHH Gagal melakukan transaksi!", "ERROR", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnSimpanActionPerformed

    //method untuk proses simpan transaksi
    private void SimpanTransaksi(int idSupplier,String idProduk, String harga, String jumlah, String total, String IdUser, LocalDate tgl_beli){
        Connection conn = null;
        java.sql.PreparedStatement stmt1 = null;
        java.sql.PreparedStatement stmt2 = null;
        try {
            String url = "jdbc:mysql://localhost:3306/dinda_salon";
            String user = "root";
            String pw = "";
            conn = DriverManager.getConnection(url, user, pw);
            
            //mengaktifkan auto-commit untuk memulai transaksi
            conn.setAutoCommit(false);
            
            //query untuk menambah data ke database
            String insert1 = "INSERT INTO pembelian (id_user, id_supplier, tgl_beli, total_beli) VALUES (?, ?, ?, ?)";
            stmt1 = conn.prepareStatement(insert1, Statement.RETURN_GENERATED_KEYS);
            stmt1.setString(1, IdUser);
            stmt1.setInt(2, idSupplier);
            stmt1.setDate(3, java.sql.Date.valueOf(tgl_beli));
            stmt1.setString(4, total);
            
            //eksekusi table pertama
            int afectedrows = stmt1.executeUpdate();
            
            //ambil id transaksi yang baru saja dimasukkan
            int idTrans = 0;
            if (afectedrows > 0) {
                try (ResultSet generatedKeys = stmt1.getGeneratedKeys()){
                    if (generatedKeys.next()) {
                        idTrans = generatedKeys.getInt(1);
                    }
                } 
            }
            
            //jika tidak ada id, maka batalkan transaksi
            if (idTrans == 0) {
                throw new SQLException("Menyimpan transaksi gagal, Id transaksi tidak tersedia!");
            }
            
            //query untuk menambah ke detail pembelian
            String insert2 = "INSERT INTO detail_pembelian (id_beli, kd_produk, jumlah_beli) VALUES (?, ?, ?)";
            stmt2 = conn.prepareStatement(insert2);
            stmt2.setInt(1, idTrans);
            stmt2.setString(2, idProduk);
            stmt2.setString(3, jumlah);
            
            int result = stmt2.executeUpdate();
            
            //jika kedua query berhasil, commit transaksi
            conn.commit();
            
             if (result > 0) {
            // Tampilkan pesan sukses dan reset form
            JOptionPane.showMessageDialog(this, "Transaksi berhasil ditambahkan.", "Sukses", JOptionPane.INFORMATION_MESSAGE);
        } else {
            JOptionPane.showMessageDialog(this, "Gagal menambahkan transaksi. Coba lagi.", "Error", JOptionPane.ERROR_MESSAGE);
        }
             
             LoadData();
        } catch (Exception e) {
            //jika ada kesalahan, rollback transaksi
            if (conn != null) {
                try {
                    System.out.println("Terjadi kesalahan, transaksi dibatalkan!");
                    conn.rollback();
                } catch (Exception ex) {
                    ex.printStackTrace();
                }
            }
            
            
        }
    }
    
    private void cmbx_supplierActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbx_supplierActionPerformed
        try {
            String selectedItem = (String) cmbx_supplier.getSelectedItem();
            if (selectedItem == null || selectedItem.equals("0 - Pilih Jenis")) {
                return;
            }

            // More robust parsing of the selected item
            String[] parts = selectedItem.split(" - ", 2);
            if (parts.length < 2) {
                throw new IllegalArgumentException("Format item tidak valid");
            }

            int selectedId = Integer.parseInt(parts[0].trim());
            String selectedName = parts[1].trim();

            // For debugging (remove in production)
            System.out.println("Supplier terpilih - ID: " + selectedId + ", Nama: " + selectedName);

        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Format ID supplier tidak valid", "Error", JOptionPane.ERROR_MESSAGE);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_cmbx_supplierActionPerformed
    
    
    // Improved supplier loading method
    private void loadSupplier() throws SQLException {
        String url = "jdbc:mysql://localhost:3306/dinda_salon";
        String user = "root";
        String pw = "";
        String query = "SELECT id_supplier, nama_supplier FROM supplier ORDER BY nama_supplier";

        DefaultComboBoxModel<String> model = new DefaultComboBoxModel<>();
        model.addElement("0 - Pilih Jenis");

        try (Connection conn = DriverManager.getConnection(url, user, pw);
             java.sql.Statement stmt = conn.createStatement();
             java.sql.ResultSet rs = stmt.executeQuery(query)) {

            while(rs.next()) {
                int id = rs.getInt("id_supplier");
                String nama = rs.getString("nama_supplier");
                model.addElement(id + " - " + nama);
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, 
                "Gagal memuat data supplier:\n" + e.getMessage(), 
                "Database Error", 
                JOptionPane.ERROR_MESSAGE);
            throw e;
        }

        cmbx_supplier.setModel(model);
    }

    

    private void cmbx_produkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbx_produkActionPerformed
        String idProduk = getIdFromComboBox(cmbx_produk);
        if (!idProduk.isEmpty() && !idProduk.equals("0")) {
            loadHarga(idProduk);
            System.out.println("ID yang dipilih: " + idProduk);
        } else {
            txt_harga.setText("0");
        }
    }//GEN-LAST:event_cmbx_produkActionPerformed
    
    private String getIdFromComboBox(javax.swing.JComboBox<String> comboBox){
        String selectedItem = (String) comboBox.getSelectedItem();
        System.out.println("Selected item dari comboBox: " + selectedItem);

        if (selectedItem != null && selectedItem.contains(" - ")) {
            String[] parts = selectedItem.split(" - ", 2);
            return parts[0];
        }

        System.out.println("ID tidak valid / tidak ditemukan");
        return "";
    }

    
    //method untuk mengambil id ke combo box
    private int getIdFromComboBoxSupp(javax.swing.JComboBox<String> comboBox){
        String selectedItem = (String) comboBox.getSelectedItem();
        if (selectedItem != null && selectedItem.contains(" - ")) {
            String[] parts = selectedItem.split(" - ", 2);
            return Integer.parseInt(parts[0]);
        }
        return 0;
    }
    private void loadProduct() throws SQLException {
        String url = "jdbc:mysql://localhost:3306/dinda_salon";
        String user = "root";
        String pw = "";
        String query = "SELECT kd_produk, nama_produk FROM produk";

        DefaultComboBoxModel<String> model = new DefaultComboBoxModel<>();
        model.addElement("0 - Pilih Produk");

        try (Connection conn = DriverManager.getConnection(url, user, pw);
             java.sql.Statement stmt = conn.createStatement();
             java.sql.ResultSet rs = stmt.executeQuery(query)) {

            while(rs.next()) {
                String id = rs.getString("kd_produk");
                String nama = rs.getString("nama_produk");
                model.addElement(id + " - " + nama);
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, 
                "Gagal memuat data supplier:\n" + e.getMessage(), 
                "Database Error", 
                JOptionPane.ERROR_MESSAGE);
            throw e;
        }

        cmbx_produk.setModel(model);
    }

    // 2. loadHarga sekarang terima ID langsung
    private void loadHarga(String idProduk) {
        String url = "jdbc:mysql://localhost:3306/dinda_salon";
        String user = "root";
        String pw = "";
        String query = "SELECT harga_produk FROM produk WHERE kd_produk = ?";
        try (Connection conn = DriverManager.getConnection(url, user, pw);
             PreparedStatement pstmt = conn.prepareStatement(query)) {
            pstmt.setString(1, idProduk);
            try (ResultSet rs = pstmt.executeQuery()) {
                txt_harga.setText(rs.next() 
                    ? String.valueOf(rs.getInt("harga_produk")) 
                    : "0"
                );
            }
        } catch (SQLException e) {
            e.printStackTrace();
            txt_harga.setText("0");
        }
    }
    
   
    //proses hitung total transaksi
    private void hitung_Total(){
        try {
            
            int jumlah = txt_jumlah.getText().isEmpty() ? 0 : Integer.parseInt(txt_jumlah.getText());
            int harga = txt_harga.getText().isEmpty() ? 0 : Integer.parseInt(txt_harga.getText());
            
            //hitung total
            int total = jumlah * harga;
            txt_total.setText(String.valueOf(total));
        } catch (Exception e) {
            txt_total.setText("0");
        }
    }
    
    //listener untuk mengisi otomatis total
    private void addInputListener(){
        txt_jumlah.addKeyListener(new java.awt.event.KeyAdapter() {
        @Override
        public void keyReleased(java.awt.event.KeyEvent evt){
           hitung_Total(); 
        }
        });
        txt_harga.addKeyListener(new java.awt.event.KeyAdapter() {
            @Override
            public void keyReleased(java.awt.event.KeyEvent evt){
               hitung_Total(); 
            }
        });
    }


    private void txt_hargaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_hargaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_hargaActionPerformed

    private void txt_jumlahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_jumlahActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_jumlahActionPerformed

    private void txt_totalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_totalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_totalActionPerformed

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnEditActionPerformed
    public void LoadData() {
        String url = "jdbc:mysql://localhost:3306/dinda_salon";
        String user = "root";
        String pw = "";
         String query = "SELECT supplier.nama_supplier, produk.nama_produk, detail_pembelian.jumlah_beli, pembelian.total_beli, pembelian.tgl_beli " +
                        "FROM detail_pembelian " +
                        "JOIN pembelian ON detail_pembelian.id_beli = pembelian.id_beli " +
                        "JOIN produk ON detail_pembelian.kd_produk = produk.kd_produk " +
                        "JOIN supplier ON pembelian.id_supplier = supplier.id_supplier";

         try  {
             Connection conn = DriverManager.getConnection(url, user, pw);
              Statement stm = conn.createStatement();
              ResultSet rs = stm.executeQuery(query);
             DefaultTableModel model = (DefaultTableModel) tb_pembelian.getModel();
             model.setRowCount(0);

             while (rs.next()) {
                 Object[] row = {
                     rs.getString("nama_supplier"),
                     rs.getString("nama_produk"),
                     rs.getInt("jumlah_beli"),
                     rs.getDouble("total_beli"),
                     rs.getDate("tgl_beli")
                 };
                 model.addRow(row);
             }
         } catch (SQLException e) {
             JOptionPane.showMessageDialog(null, "Gagal tampil data! Error: " + e.getMessage());
         }
     }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PembelianKasir.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PembelianKasir.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PembelianKasir.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PembelianKasir.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PembelianKasir().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnMember;
    private javax.swing.JButton btnPembelian;
    private javax.swing.JButton btnProduct;
    private javax.swing.JButton btnSimpan;
    private javax.swing.JButton btnTransaksi;
    private javax.swing.JButton btnTreatment;
    private javax.swing.JComboBox<String> cmbx_produk;
    private javax.swing.JComboBox<String> cmbx_supplier;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tb_pembelian;
    private javax.swing.JTextField txt_harga;
    private javax.swing.JTextField txt_jumlah;
    private javax.swing.JTextField txt_total;
    // End of variables declaration//GEN-END:variables
}
