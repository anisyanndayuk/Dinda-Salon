import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
public class owner_membership extends javax.swing.JFrame {
    private Connection conn;
    private final String DB_URL = "jdbc:mysql://localhost:3306/dinda_salon";
    private final String DB_USER = "root";
    private final String DB_PASS = "";
    
    public owner_membership() {
        initComponents();
        connectToDatabase();
        loadMemberData();
        setupButtonActions();
    }
    
    private void connectToDatabase() {
        try {
            conn = DriverManager.getConnection(DB_URL, DB_USER, DB_PASS);
            System.out.println("Connected to database successfully!");
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Database connection failed: " + e.getMessage(), 
                    "Error", JOptionPane.ERROR_MESSAGE);
            System.exit(1);
        }
    }
    
    private void loadMemberData() {
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        model.setRowCount(0); // Clear existing data
        
        try {
            String query = "SELECT id_member, nama_member, jenis_kelamin, notelp_member, alamat_member, poin_member FROM member";
            PreparedStatement pst = conn.prepareStatement(query);
            ResultSet rs = pst.executeQuery();
            
            while (rs.next()) {
                String id = rs.getString("id_member");
                String nama = rs.getString("nama_member");
                String jk = rs.getString("jenis_kelamin");
                String noTelp = rs.getString("notelp_member");
                String alamat = rs.getString("alamat_member");
                int poin = rs.getInt("poin_member");
                
                model.addRow(new Object[]{id, nama, jk, noTelp, alamat, poin});
            }
            
            rs.close();
            pst.close();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Failed to load data: " + e.getMessage(), 
                    "Error", JOptionPane.ERROR_MESSAGE);
        }
    }
    
    private void hapusMember() {
        int selectedRow = jTable1.getSelectedRow();
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Silakan pilih member terlebih dahulu!", 
                    "Peringatan", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        String idMember = jTable1.getValueAt(selectedRow, 0).toString();
        String namaMember = jTable1.getValueAt(selectedRow, 1).toString();
        
        int confirm = JOptionPane.showConfirmDialog(this, 
                "Apakah Anda yakin ingin menghapus member:\n" + namaMember + " (ID: " + idMember + ")", 
                "Konfirmasi Hapus", JOptionPane.YES_NO_OPTION);
        
        if (confirm == JOptionPane.YES_OPTION) {
            try {
                String query = "DELETE FROM member WHERE id_member = ?";
                PreparedStatement pst = conn.prepareStatement(query);
                pst.setString(1, idMember);
                
                int affectedRows = pst.executeUpdate();
                if (affectedRows > 0) {
                    JOptionPane.showMessageDialog(this, "Member berhasil dihapus!");
                    loadMemberData();
                } else {
                    JOptionPane.showMessageDialog(this, "Gagal menghapus member!");
                }
                
                pst.close();
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(this, "Error: " + e.getMessage(), 
                        "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }
    
    private void setupButtonActions() {
        btndashboard.addActionListener(e -> {
            new owner_membership().setVisible(true);
            this.dispose();
        });
         btnkembali.addActionListener(e -> {
        new owner_dashboard().setVisible(true);
        this.dispose();
    });
       }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        btnHapus = new javax.swing.JButton();
        btndashboard = new javax.swing.JButton();
        btnkembali = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Nama", "Jenis Kelamin", "Nomor Telepon", "Alamat"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 130, 730, 410));

        btnHapus.setContentAreaFilled(false);
        btnHapus.setIcon(new javax.swing.ImageIcon(getClass().getResource("/btn/Group 14.png"))); // NOI18N
        btnHapus.setDisabledIcon(null);
        btnHapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHapusActionPerformed(evt);
            }
        });
        btnHapus.setBorderPainted(false);
        getContentPane().add(btnHapus, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 560, 160, -1));

        btndashboard.setIcon(new javax.swing.ImageIcon(getClass().getResource("/btn/Group 104.png"))); // NOI18N
        btndashboard.setContentAreaFilled(false);
        btndashboard.setDisabledIcon(new javax.swing.ImageIcon(getClass().getResource("/btn/Group 104 (1).png"))); // NOI18N
        btndashboard.setBorderPainted(false);
        btndashboard.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btndashboardActionPerformed(evt);
            }
        });
        getContentPane().add(btndashboard, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 80, -1));

        btnkembali.setIcon(new javax.swing.ImageIcon(getClass().getResource("/btn/bck.png"))); // NOI18N
        btnkembali.setContentAreaFilled(false);
        btnkembali.setDisabledIcon(new javax.swing.ImageIcon(getClass().getResource("/btn/bck1.png"))); // NOI18N
        btnkembali.setBorderPainted(false);
        btnkembali.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnkembaliActionPerformed(evt);
            }
        });
        getContentPane().add(btnkembali, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 550, -1, -1));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/picture/Group 77.png"))); // NOI18N
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnHapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHapusActionPerformed
        // TODO add your handling code here:
        hapusMember();
    }//GEN-LAST:event_btnHapusActionPerformed

    private void btndashboardActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btndashboardActionPerformed
        owner_dashboard membershipForm = new owner_dashboard();
        membershipForm.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btndashboardActionPerformed

    private void btnkembaliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnkembaliActionPerformed
        // TODO add your handling code here:
        owner_dashboard dashboardForm = new owner_dashboard();
        dashboardForm.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnkembaliActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(owner_membership.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(owner_membership.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(owner_membership.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(owner_membership.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new owner_membership().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnHapus;
    private javax.swing.JButton btndashboard;
    private javax.swing.JButton btnkembali;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
